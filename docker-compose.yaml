services:
  drachtio-server:
    image: drachtio/drachtio-server
    container_name: drachtio-server
    ports:
      - "9022:9022"
      - "5060:5060/udp"
    environment:
      - DRACHTIO_LOGLEVEL=debug
      - DRACHTIO_SECRET=cymru

  drachtio-app:
    image: node:18
    container_name: drachtio-app
    working_dir: /app
    volumes:
      - ./app:/app
    command: >
      sh -c "npm install && node index.js"
    depends_on:
      - drachtio-server
    environment:
      - NODE_ENV=development

  sipp-client:
    image: drachtio/sipp
    container_name: sipp-client
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        echo "Waiting for Drachtio to be ready..." && sleep 5 && \
        sipp -sf /sipp/uac.xml drachtio-server:5060 -s 1234 -r 1 -m 1 -trace_err -trace_msg -trace_logs
    volumes:
      - ./sipp:/sipp
    depends_on:
      - drachtio-server

  caddy:
    container_name: caddy
    image: stefanprodan/caddy
    ports:
      - "9080:9080"
    volumes:
      - ./caddy/:/etc/caddy/
    environment:
      - ADMIN_USER=${ADMIN_USER:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
    restart: unless-stopped
    labels:
      org.label-schema.group: "monitoring"

  heplify-server:
    image: sipcapture/heplify-server
    container_name: heplify-server
    ports:
      - "9060:9060"
      - "9060:9060/udp"
    command:
      - './heplify-server'
    environment:
      - "HEPLIFYSERVER_DBSHEMA=homer7"
      - "HEPLIFYSERVER_DBDRIVER=postgres"
      - "HEPLIFYSERVER_DBADDR=db:5432"
      - "HEPLIFYSERVER_DBUSER=root"
      - "HEPLIFYSERVER_DBPASS=homerSeven"
      - "HEPLIFYSERVER_DBDATATABLE=homer_data"
      - "HEPLIFYSERVER_DBCONFTABLE=homer_config"
      - "HEPLIFYSERVER_DBDROPDAYS=5"
      - "HEPLIFYSERVER_LOGLVL=info"
      - "HEPLIFYSERVER_LOGSTD=true"
    restart: unless-stopped
    depends_on:
      - db
    expose:
      - 9090
    labels:
      org.label-schema.group: "monitoring"

  homer-webapp:
    container_name: homer-webapp
    image: sipcapture/webapp
    environment:
      - "DB_HOST=db"
      - "DB_USER=root"
      - "DB_PASS=homerSeven"
    restart: unless-stopped
    expose:
      - 80
    volumes:
      - ./bootstrap:/app/bootstrap
    depends_on:
      db:
        condition: service_healthy

  db:
    container_name: db
    image: postgres:11-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: homerSeven
      POSTGRES_USER: root
    ports:
      - "5432:5432"
    expose:
      - 5432
    volumes:
      - ./init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
      - homer_db_data1:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "psql -h 'localhost' -U 'root' -c '\\l'"]
      interval: 1s
      timeout: 3s
      retries: 30

volumes:
  homer_db_data1:
